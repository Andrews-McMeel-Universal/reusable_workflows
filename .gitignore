# AMU General Gitignore
# Includes general ignores plus these specific ignores:
# Rails, Node/JS, SCSS/Sass, JetBrains IDEs, Visual Studio, and VSCode

# Usage:
# Put project-specific ignores at the bottom of this file under "Project Specific"

# To check what's currently ignored run: git check-ignore **/*
# To debug files that may have been accidentally tracked: git check-ignore **/* --no-index

# To reset git's tracked files and remove files/directories that should be ignored:
# commit changes, including the updated .gitignore
# run: git rm -r --cached .
# or dry run (to test before removing): git rm -r --cached . --dry-run
# commit all changes

###################

# General

# macOS
.DS_Store

# logfiles and tempfiles
/log/*
/tmp/*
**/tmp/pids/
**/tmp/cache/
!/log/.keep
!/tmp/.keep
logs
*.log*
github_conf/*

# db
/db/*.sqlite3
/db/*.sqlite3-journal
/db/*.sqlite3-[0-9]*
*.sql
*.sqlite

# ssh
id_rsa

# azure-content-management_tool ignore
**/azcm_db_config.psd1

###################

# Rails
# https://github.com/github/gitignore/blob/master/Rails.gitignore

*.rbc
capybara-*.html
.rspec
/public/system
/coverage/
/spec/tmp
*.orig
rerun.txt
tfs-sw.js
tfs-sw.js.map
workbox-*.js
workbox-*.js.map
jest-results.xml
*.sphinx.conf

# Comment out this rule if you are OK with secrets being uploaded to the repo
config/initializers/secret_token.rb
config/master.key

# WordPress specific files
# NOTE:
#   WP Engine automatically updates part or all of WordPress under certain
#   circumstances, so generally it is desirable to not version control copies of
#   the. However, in case you do have some specific need to version control
#   these files, you can comment out these lines.
wp-config.php
wp-content/uploads/
wp-content/blogs.dir/
wp-content/upgrade/*
wp-content/backup-db/*
wp-content/advanced-cache.php
wp-content/wp-cache-config.php
wp-content/cache/*

# Themes (AMU Specific)
/wp-content/themes/twentynineteen
/wp-content/themes/twentytwenty
/wp-content/themes/twentytwentyone
/wp-content/themes/index.php

# Version Control files
*.bak
*.svn
*.cvs
*.swp

# Plugins (AMU Specific)
wp-content/mu-plugins/
wp-content/plugins/
wp-content/shield/

# WP Core (AMU Specific)
/db-config.php
/wp-activate.php
/wp-app.php
/wp-atom.php
/wp-blog-header.php
/wp-comments-post.php
/wp-commentsrss2.php
/wp-config-sample.php
/wp-cron.php
/wp-feed.php
/wp-links-opml.php
/wp-load.php
/wp-login.php
/wp-mail.php
/wp-rdf.php
/wp-rss.php
/wp-rss2.php
/wp-pass.php
/wp-register.php
/wp-settings.php
/wp-signup.php
/wp-trackback.php
/xmlrpc.php
/wp-admin
/wp-includes
/wp-content/index.php
.wpe-pull-ignore
.wpe-push-ignore
.wpengine-conf/


# NOTE:
#   These files are specific to running a WordPress site at WP Engine and would
#   likely result in a broken production site if modified in production (in
#   fact, permissions would prevent modification for many of these files). It is
#   strongly recommended that you do not attempt to modify these files in
#   production.
/_wpeprivate
/wp-content/object-cache.php
/wp-content/mu-plugins/mu-plugin.php
/wp-content/mu-plugins/slt-force-strong-passwords.php
/wp-content/mu-plugins/stop-long-comments.php
/wp-content/mu-plugins/force-strong-passwords*
/wp-content/mu-plugins/wpe-devkit*
/wp-content/mu-plugins/wpengine-common*
/wp-content/mu-plugins/wpengine-excerpt*
/wp-content/mu-plugins/wpe-wp-sign-on-plugin*
/wp-content/plugins/wpengine-snapshot/snapshots
/wp-content/mysql.sql
/.wpe-devkit

# Large and binary files
# NOTE:
#   It is generally considered bad practice to version control binary asset
#   files in the same repo as text code, but you can attempt to proceed anyway
#   by commenting out these lines.
*.hqx
*.exe
*.deb
*.dmg
*.iso
*.img
*.msi
*.msp
*.msm
*.mid
*.midi
*.kar
*.mp3
*.ogg
*.m4a
*.ra
*.3gpp
*.3gp
*.mp4
*.mpeg
*.mpg
*.mov
*.webm
*.flv
*.m4v
*.mng
*.asx
*.asf
*.wmv
*.avi

# Only include if you have production secrets in this file, which is no longer a Rails default
# config/secrets.yml

## Environment normalization:
/.bundle
/vendor/bundle

# these should all be checked in to normalize the environment:
# Gemfile.lock, .ruby-version, .ruby-gemset

# unless supporting rvm < 1.11.0 or doing something fancy, ignore this:
.rvmrc

# Ignore pow environment settings
.powenv

# Ignore Byebug command history file.
.byebug_history

# Ignore precompiled javascript packs
/public/packs
/public/packs-test
/public/assets
/public/cache/*
/public/uploads/*

# Ignore compiled storybook directory
/storybook-static

# Ignore uploaded files in development
/storage/*
!/storage/.keep

###################

# Node/JS
# https://github.com/github/gitignore/blob/master/Node.gitignore

/.next/
/out/
.cache
.npm
next.config.original.js
next.config.wizardcopy.js
/build

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Dependencies
node_modules/

# CI Health Reporting
coverage/
# TODO: We should organize linting/test reports into coverage.
# coverage/linting/*
# coverage/unit/*
# coverage/integration/*
/test-results/*
megalinter-reports/*
jscpd-report.json

# Automated Testing
/coverage/integration
/test-results/
/playwright/storage-states/
/playwright/.cache/
/playwright-report/

# Optional eslint cache
.eslintcache

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity
yarn-error.log

# Configs
configFile.json
levelFile.json

###################

# SCSS/Sass
# https://github.com/github/gitignore/blob/master/Sass.gitignore

.sass-cache/
*.css.map
*.sass.map
*.scss.map

###################

# JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm
# https://github.com/github/gitignore/blob/master/Global/JetBrains.gitignore

# User-specific stuff
.idea*

# IntelliJ
out/

# JIRA plugin
atlassian-ide-plugin.xml

# Editor-based Rest Client
.idea/httpRequests

###################

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverage*.info

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio 6 technical files
*.ncb
*.aps

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# Visual Studio History (VSHistory) files
.vshistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

# VS Code files for those working on multiple tools
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

# Windows Installer files from build outputs
*.cab
*.msi
*.msix
*.msm
*.msp

# JetBrains Rider
*.sln.iml

###################

# VSCode
# https://github.com/github/gitignore/blob/master/Global/VisualStudioCode.gitignore

# by default all files in this directory should be ignored in Git
.vscode/*
*devcontainer.env

# these rules can be shared with collaborators
# uncomment these lines if you wish to share these config files
# !.vscode/settings.json
# !.vscode/tasks.json
# !.vscode/launch.json
# !.vscode/extensions.json

###################

# Project Specific
# unique ignores for this project

# dependencies
/.pnp
.pnp.js

# generated during build
robots.txt
sitemap*.xml

# misc
.DS_Store

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
debug.log

# local env files
.env
.env.local
.env.*.local

# Sentry
.sentryclirc
.sentry.properties

# Key Vaults
Secrets.json

#History directory
./history/
*.history
.setup_done

# Azure B2C
/**/src/custom-policies/B2C_1A_*_*_SIGNINSIGNOUT_*.xml
/custom-policies/**/B2C_1A_*_*_SIGNINSIGNOUT_*.xml
