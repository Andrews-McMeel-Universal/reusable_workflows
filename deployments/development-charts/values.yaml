# Default values for test-workflow.
replicaCount: 1

image:
  repository: amuappimages201.azurecr.io
  pullPolicy: IfNotPresent
  tag: ''

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

deployment:
  secret: test-workflow-secret
  healthCheckPath: /

service:
  type: LoadBalancer
  port: 80
  targetPort: 3000
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: 'true'

ingress:
  host: test-workflow.amuniversal.com # Anticipating being behind an Azure Frontdoor.
  tlssecret: test-workflow-tls-secret
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/whitelist-source-range: '207.67.20.252'
    # authentication
    # nginx.ingress.kubernetes.io/auth-type: basic
    # nginx.ingress.kubernetes.io/auth-secret: gocomics-ui-basic-auth
    # nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    #rate limiting for ddos protection
    nginx.ingress.kubernetes.io/limit-connections: '100'
    nginx.ingress.kubernetes.io/limit-rps: '10'
    nginx.ingress.kubernetes.io/limit-rpm: '60'
    nginx.ingress.kubernetes.io/limit-conn-status-code: '429'
    nginx.ingress.kubernetes.io/limit-whitelist: '207.67.20.252'
    #CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    #Header size
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"

resources:
  limits:
    cpu: 1000m
    memory: 1000Mi
  requests:
    cpu: 100m
    memory: 100Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 60
  targetCPUUtilizationPercentage: 50
