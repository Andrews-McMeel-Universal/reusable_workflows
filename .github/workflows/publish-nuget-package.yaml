name: Publish Nuget Package

on:
  workflow_call:
    inputs:
      projectName:
        required: false
        type: string
        description: Models Project Directory Name
        default: ${{ vars.NUGET_PROJECT_NAME }}
      dotnetVersion:
        required: false
        type: string
        description: ".NET SDK Version"
        default: ${{ vars.DOTNET_VERSION }}
      libraries:
        required: false
        type: string
        description: Shared Library Name
        default: ${{ vars.DOTNET_LIBRARIES }}
      checkoutRef:
        required: false
        type: string
        description: "The branch, tag, or SHA to checkout"
        default: ${{ github.ref }}
    secrets:
      PAT_ACTION_CI:
        required: true

jobs:
  publish-nuget-package:
    name: Publish Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkoutRef }}

      - name: Get Project Name
        id: project-name
        shell: pwsh
        run: |
          $ProjectName = ("${{ inputs.projectName }}" || (Split-Path -Path (Get-ChildItem ./ -Recurse | Where-Object { $_.PSIsContainer -and $_.Name.EndsWith(".Models")}) -Leaf))
          Write-Output "projectName=$ProjectName" >> $env:GITHUB_OUTPUT

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnetVersion }}

      - name: Add AMU GitHub Packages nuget source
        working-directory: ${{ steps.project-name.outputs.projectName }}
        run: |
          dotnet nuget add source "https://nuget.pkg.github.com/andrews-mcmeel-universal/index.json" --name "AMU GitHub Packages" --username "amu_deploy@amuniversal.com" --password "${{ secrets.PAT_ACTION_CI }}" --store-password-in-clear-text

      - name: Restore dependencies
        working-directory: ${{ steps.project-name.outputs.projectName }}
        run: dotnet restore

      - name: Build Project
        working-directory: ${{ steps.project-name.outputs.projectName }}
        run: dotnet build --configuration Release --no-restore

      - name: Package Project
        working-directory: ${{ steps.project-name.outputs.projectName }}
        run: dotnet pack  --configuration Release

      - name: Push ${{ steps.project-name.outputs.projectName }} Package
        if: ${{ ! inputs.libraries }}
        working-directory: "${{ steps.project-name.outputs.projectName }}/"
        run: dotnet nuget push "*.nupkg" --api-key "${{ secrets.GITHUB_TOKEN }}" --source "https://nuget.pkg.github.com/andrews-mcmeel-universal/index.json" --skip-duplicate

      - name: Push ${{ steps.project-name.outputs.projectName }} Packages
        if: ${{ inputs.libraries }}
        run: |
          LIBRARIES=(${{ inputs.libraries }})
          for LIBRARY in "${LIBRARIES[@]}"; do
            cd "${{ github.workspace }}/${{ steps.project-name.outputs.projectName }}/${LIBRARY}/"
            dotnet nuget push "*.nupkg" --api-key "${{ secrets.GITHUB_TOKEN }}" --source "https://nuget.pkg.github.com/andrews-mcmeel-universal/index.json" --skip-duplicate
          done