name: Clear Azure Redis Cache

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: "Environment to clear caches for."
      resourceGroupName:
        default: "AMU_DevOps_RG"
        type: string
        description: "Name of Resource Group that the Azure Redis Instance is in."
      applicationCacheKey:
        default: "*"
        type: string
        description: "Cache key for the application"
    secrets:
      azureCredentials:
       required: true

jobs:
  clear-redis-cache:
    name: Clear Azure Redis Cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login via Az module
        uses: azure/login@v2
        with:
          creds: "${{ secrets.azureCredentials }}"
          enable-AzPSSession: true

      - name: Install jq apt package
        run: sudo apt-get update -y && sudo apt-get install redis-tools -y

      # Script is adapted from https://github.com/Andrews-McMeel-Universal/azure-content-management_tool/blob/main/Scripts/rundeck/Flush-RedisCache.ps1
      - name: Clear Redis Cache
        shell: pwsh
        run: |
          $CacheKey = "${{ inputs.applicationCacheKey }}"
          $ResourceGroupName = "${{ inputs.resourceGroupName }}"
          $Environment = "${{ inputs.environment }}"

          # Check to see if Azure Redis Cache PowerShell Module is installed
          Install-Module -Name Az.RedisCache -Confirm:$false -Force

          # Get list of Redis instances using tags
          $Redis = Get-AzRedisCache -ResourceGroupName "$ResourceGroupName" | Where-Object { $_.Tag.Values -eq "$Environment" }

          # Loop through Redis instances
          $Redis | ForEach-Object {
              $RedisHostname = $_.HostName
              $RedisPort = $_.Port
              $RedisName = $_.Name
              $RedisKey = (Get-AzRedisCacheKey -Name $RedisName -ResourceGroupName $ResourceGroupName).PrimaryKey

              Write-Host "Authenticating to $RedisHostname..." -ForegroundColor DarkGray
              $RedisCommands = "AUTH $RedisKey
              SELECT 0
              EVAL 'return redis.call(\'del\', unpack(redis.call(\'keys\', ARGV[1])))' 0 $CacheKey"
              Write-Host "Clearing cache key: $CacheKey" -ForegroundColor DarkGray
              $RedisResult = $RedisCommands | redis-cli -h $RedisHostname -p $RedisPort

              # Check if output from cache clearing command has correct status message
              if ($RedisResult -match '^\d+$') {
                  Write-Host "Successfully flushed cache for $RedisHostname" -ForegroundColor Green
              }
              elseif ($RedisResult -match 'Wrong number of args calling Redis command From Lua script') {
                  Write-Host "Cache key $CacheKey missing in $RedisHostname" -ForegroundColor Yellow
              }
              else {
                  Write-Host "Cache key $CacheKey status unknown in $RedisHostname" -ForegroundColor Red
                  Write-Host "Full output: $RedisResult"
              }
          }

