name: Lint and Format Code

on:
  workflow_dispatch:
    inputs:
      NODE_ENV:
        description: Next.js build arg [optional]
        type: string
      LINT_FLAVOR:
        description: Mega Lint flavor
        type: string
        default: "cupcake"
      APPLY_FIXES:
        type: string
        description: "Comma-separated list of linters to run"
        default: "all"
      APPLY_FIXES_MODE:
        type: choice
        description: "Decide which event triggers application of fixes in a commit or a PR"
        options:
          - "pull_request"
          - "commit"
      APPLY_FIXES_EVENT:
        type: choice
        description: "Create PR or commit directly to branch"
        options:
          - "all"
          - "push"
          - "pull_request"
          - "none"

env:
  APPLY_FIXES: ${{ inputs.APPLY_FIXES }}
  APPLY_FIXES_MODE: ${{ inputs.APPLY_FIXES_MODE }}
  APPLY_FIXES_EVENT: ${{ inputs.APPLY_FIXES_EVENT }}

jobs:
  lint-cupcake:
    name: Run MegaLinter Cupcake
    if: ${{ inputs.LINT_FLAVOR == 'cupcake' }}
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_ACTION_CI }}
          fetch-depth: 0

      - name: Set up Node from NVM
        if: ${{ inputs.NODE_ENV }}
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "yarn"

      - name: Install dependencies
        if: ${{ inputs.NODE_ENV }}
        run: yarn install --frozen-lockfile --prefer-offline

      # Run the MegaLinter Github Action
      - name: MegaLinter
        id: ml
        uses: oxsecurity/megalinter/flavors/cupcake@v7
        env:
          VALIDATE_ALL_CODEBASE: ${{ github.event_name == 'workflow_dispatch' }}
          GITHUB_TOKEN: ${{ secrets.PAT_ACTION_CI }}

      # Creates archive artifact of linting reports
      # Upload MegaLinter artifacts
      - name: Archive production artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log
          retention-days: 7

      # Create pull request if applicable (for now works only on PR from same repository, not from forks)
      - name: Create Pull Request with applied fixes
        id: cpr
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'pull_request'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT_ACTION_CI|| secrets.GITHUB_TOKEN }}
          commit-message: "[MegaLinter] Apply linters automatic fixes"
          title: "[MegaLinter] Apply linters automatic fixes"
          labels: bot

      # Commit fixes back into the raised PR branch
      - name: Prepare Linting Fix Commit
        if: steps.ml.outputs.has_updated_sources == 1 && github.ref != 'refs/heads/main' && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'commit'
        run: sudo chown -Rc $UID .git/

      - name: Commit and Push Linting Fixes
        if: steps.ml.outputs.has_updated_sources == 1 && github.ref != 'refs/heads/main' && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'commit'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_user_name: amutechtest
          commit_user_email: amu_deploy@amuniversal.com
          commit_message: "[MegaLinter] Apply prettier changes"

  lint-dotnet:
    name: Run MegaLinter Dotnet
    if: ${{ inputs.LINT_FLAVOR == 'dotnet' }}
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_ACTION_CI }}
          fetch-depth: 0

      # Run the MegaLinter Github Action
      - name: MegaLinter
        id: ml
        uses: oxsecurity/megalinter/flavors/dotnet@v7
        env:
          VALIDATE_ALL_CODEBASE: ${{ github.event_name == 'workflow_dispatch' }}
          GITHUB_TOKEN: ${{ secrets.PAT_ACTION_CI }}

      # Creates archive artifact of linting reports
      # Upload MegaLinter artifacts
      - name: Archive production artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log
          retention-days: 7

      # Create pull request if applicable (for now works only on PR from same repository, not from forks)
      - name: Create Pull Request with applied fixes
        id: cpr
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'pull_request'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT_ACTION_CI|| secrets.GITHUB_TOKEN }}
          commit-message: "[MegaLinter] Apply linters automatic fixes"
          title: "[MegaLinter] Apply linters automatic fixes"
          labels: bot

      # Commit fixes back into the raised PR branch
      - name: Prepare Linting Fix Commit
        if: steps.ml.outputs.has_updated_sources == 1 && github.ref != 'refs/heads/main' && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'commit'
        run: sudo chown -Rc $UID .git/

      - name: Commit and Push Linting Fixes
        if: steps.ml.outputs.has_updated_sources == 1 && github.ref != 'refs/heads/main' && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'commit'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_user_name: amutechtest
          commit_user_email: amu_deploy@amuniversal.com
          commit_message: "[MegaLinter] Apply prettier changes"
