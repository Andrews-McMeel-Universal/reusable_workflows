name: Build and Deploy B2C auth application

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Deploy Environment.  This is used to pull in and set the github environment. Can be development, staging, or production.'
      environmentKeyVault:
        required: true
        type: string
        description: 'Azure Key vault Name.'
      azureB2CProductName:
        required: true
        type: string
        description: 'Name of the B2C product.'
      azureB2CDomain:
        required: true
        type: string
        description: 'Domain name of the B2C tenant.'
    secrets:
      azureCredentials:
        required: true
      registryUserName:
        required: true
      registryPassword:
        required: true
      storageAccountKey:
        required: true
      azureB2CClientId:
        required: true
      azureB2CClientSecret:
        required: true

jobs:
  build:
    name: Build B2C Application
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    continue-on-error: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3.2.0

      - name: Login via Az module
        uses: azure/login@v1.4.7
        with:
          creds: ${{ secrets.azureCredentials }}
          enable-AzPSSession: true

      - name: Get Secrets from Key Vaults
        id: getsecrets
        uses: azure/powershell@v1.2.0
        with:
          inlineScript: |
            Function Get-EnvSecrets {
              param (
                  $KeyVaultName
              )
                #$secretTable = @{}
                $envSecrets = (Get-AzKeyVaultSecret -VaultName $KeyVaultName  | Where-Object {($_.ContentType -contains 'Env') -or ($_.ContentType -contains 'BuildArg Env')}).Name
                $envSecrets | ForEach-Object {
                    $envName = $_.ToUpper()
                    $envName = $envName.Replace("-","_")
                    $envSecret = (Get-AzKeyVaultSecret -VaultName $KeyVaultName -Name $_).secretvalue | ConvertFrom-SecureString -AsPlainText
                    $envFileContent = $envName + "=" + $envSecret
                    Add-Content -Path ".env" -Value $envFileContent
                }
                return $Secret
            }
            Get-EnvSecrets -KeyVaultName "${{ inputs.environmentKeyVault }}"
            Write-Host $Secret

            echo "buildArguments=$buildArguments" >> $GITHUB_OUTPUT
          azPSVersion: 'latest'

      - name: Get Fresh Packages
        shell: pwsh
        run: |
          yarn install

      - name: Build Policies
        shell: pwsh
        run: |
          $Environment = "${{ inputs.environment }}"
          $ProductName = "${{ inputs.azureB2CProductName }}".Replace("-","").Replace("the","")
          yarn config set product $ProductName
          yarn config set environment $Environment
          yarn build

      - name: 'Upload TrustFrameworkBase Policy'
        uses: azure-ad-b2c/deploy-trustframework-policy@v5.3
        with:
          folder: './dist/${{ inputs.azureB2CProductName }}/custom-policies'
          files: 'B2C_1A_TPS_SIGNINSIGNOUT_BASE.xml,B2C_1A_TPS_SIGNINSIGNOUT_EXTENSIONS.xml,B2C_1A_TPS_SIGNINSIGNOUT_POLICIES.xml,B2C_1A_TPS_IMPERSONATION.xml'
          tenant: ${{ inputs.azureB2CDomain }}
          clientId: ${{ secrets.azureB2CClientId }}
          clientSecret: ${{ secrets.azureB2CClientSecret }}

      - name: Upload Auth Assets
        uses: azure/powershell@v1.2.0
        with:
          inlineScript: |
            $BasePath = Get-Location
            $DistPath = Join-Path $BasePath "dist"
            ./deployments/scripts/Deploy-B2C_Auth.ps1 -StorageAccountName "amuauthassets" -StorageAccountKey "${{ secrets.storageAccountKey }}" -ContainerName "${{ inputs.environment }}-assets" -DistPath $DistPath -ProductPath "${{ inputs.azureB2CProductName }}"
          azPSVersion: 'latest'

      - name: Purge CDN Cache
        run: |
          az cdn endpoint purge --resource-group 'Site_Assets' --profile-name 'amuauthassets' --name 'amuauthassets' --content-paths '/*'
