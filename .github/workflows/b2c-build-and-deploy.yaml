name: Build and Deploy B2C auth application

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: "Deploy Environment.  This is used to pull in and set the github environment. Can be development, staging, or production."
      environmentKeyVault:
        required: false
        type: string
        description: "AKS Key vault."
      checkoutRef:
        required: false
        type: string
        description: "The branch, tag, or SHA to checkout"
        default: ${{ github.ref }}
      deploymentWebhook:
        required: false
        type: string
        description: "The webhook URL for the deployment status"
        default: ${{ vars.MSTEAMS_DEPLOYMENT_WEBHOOK }}
    secrets:
      azureCredentials:
        required: true
      storageAccountKey:
        required: true
      azureB2CClientSecret:
        required: true

jobs:
  build:
    name: Build B2C Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkoutRef }}

      - name: Generate .env file from Azure Key Vaults
        uses: Andrews-McMeel-Universal/get-envs@v1
        with:
          azurecredentials: ${{ secrets.azureCredentials }}
          environment: ${{ inputs.environment }}
          environmentKeyVault: ${{ inputs.environmentKeyVault }}

      - name: Get Fresh Packages
        run: |
          yarn install

      - name: Build Policies
        run: |
          yarn build

      - name: Upload TrustFrameworkBase Policy
        uses: Andrews-McMeel-Universal/deploy-trustframework-policy@v6
        with:
          folder: "./dist/custom-policies/"
          files: "B2C_1A_${{ env.AZURE_B2C_PRODUCT_ID }}_SIGNINSIGNOUT_BASE.xml,B2C_1A_${{ env.AZURE_B2C_PRODUCT_ID }}_SIGNINSIGNOUT_EXTENSIONS.xml,B2C_1A_${{ env.AZURE_B2C_PRODUCT_ID }}_SIGNINSIGNOUT_POLICIES.xml,B2C_1A_${{ env.AZURE_B2C_PRODUCT_ID }}_IMPERSONATION.xml,B2C_1A_${{ env.AZURE_B2C_PRODUCT_ID }}_SIGNINSIGNOUT_IMPERSONATION.xml"
          tenantDomain: ${{ env.AZURE_B2C_DOMAIN }}
          tenantId: ${{ env.AZURE_B2C_TENANT_ID }}
          clientId: ${{ env.AZURE_B2C_CLIENT_ID }}
          clientSecret: ${{ env.AZURE_B2C_CLIENT_SECRET }}

      - name: Upload Auth Assets
        uses: azure/powershell@v2
        with:
          inlineScript: |
            if ("${{ inputs.environment }}" -match "production") {
                $ContainerName = "assets"
            }
            else {
                $ContainerName = "${{ inputs.environment }}-assets"
            }
            $DistPath = Join-Path (Get-Location) "dist"
            ./deployments/scripts/Deploy-B2C-Auth.ps1 -StorageAccountName "amuauthassets" -StorageAccountKey "${{ secrets.storageAccountKey }}" -ContainerName $ContainerName -DistPath $DistPath
          azPSVersion: "latest"

      - name: Send Failed Deployment report to Teams
        if: failure() && (inputs.environment != 'development')
        uses: jdcargile/ms-teams-notification@v1.4
        with:
          github-token: ${{ github.token }} # this will use the runner's token.
          ms-teams-webhook-uri: ${{ inputs.deploymentWebhook }}
          notification-summary: "${{ github.event.release.tag_name != '' && format('{0} ', github.event.release.tag_name) || ' ' }}Failed ${{ inputs.environment }} Deployment"
          notification-color: 17a2b8
          timezone: America/Chicago
          verbose-logging: true

      - name: Send Succeeded Deployment report to Teams
        if: success() && (inputs.environment != 'development')
        uses: jdcargile/ms-teams-notification@v1.4
        with:
          github-token: ${{ github.token }} # this will use the runner's token.
          ms-teams-webhook-uri: ${{ inputs.deploymentWebhook }}
          notification-summary: "${{ github.event.release.tag_name != '' && format('{0} ', github.event.release.tag_name) || ' ' }}Successful ${{ inputs.environment }} Deployment"
          notification-color: 28a745
          timezone: America/Chicago
          verbose-logging: true
