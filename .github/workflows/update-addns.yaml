name: Update Boley AD DNS

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: "Deploy environment. Can be development, staging, or production."
      repositoryName:
        required: false
        type: string
        description: "GitHub Repository Name."
        default: ${{ github.event.repository.name }}
      storageAccountName:
        required: false
        type: string
        description: "Storage Account for application information table."
        default: "amucloudapps"
      appInfoTableName:
        required: false
        type: string
        description: "Application information storage table."
        default: "DeployedApplications"
    secrets:
      domainController:
        required: true
        description: "Domain Controller Server Name."
      storageAccountKey:
        required: true

jobs:
  update-dns:
    name: Update Boley DNS
    runs-on: [self-hosted, Windows, boley]
    steps:
      - name: Retrieve Application information
        id: getappinfo
        shell: pwsh
        run: |
          Install-Module -Name AzTable -Force
          Import-Module AzTable

          $storageAccountName = "${{ inputs.storageAccountName }}"
          $storageAccountKey = ${{ secrets.storageAccountKey }}
          $appInfoTableName = "${{ inputs.appInfoTableName }}"

          $storageContext = New-AzStorageContext -StorageAccountName $storageAccountName -StorageAccountKey $storageAccountKey

          #Get Storage table
          try {
              $appInfoTable = (Get-AzStorageTable -Name $appInfoTableName -Context $storageContext -ErrorAction Stop).CloudTable 
              }
          catch {
              Write-Error -Message "Error accessing cloud $appInfoTableName table.  Error message was: $_.Exception.Message"
              return
          }

          $appInfo = Get-AzTableRow -Table $appInfoTable -PartitionKey "${{ inputs.repositoryName }}" -RowKey "${{ inputs.environment }}"

          echo "aksIngress=$($appInfo.AksIngress)" >> $env:GITHUB_ENV
          echo "hostName=$($appInfo.HostName)" >> $env:GITHUB_ENV
          echo "domainName=$($appInfo.DomainName)" >> $env:GITHUB_ENV

      - name: Update Internal Boley DNS
        timeout-minutes: 15
        shell: pwsh
        run: |
          try {
            Add-DnsServerResourceRecordCName -Name "${{ env.hostName }}" -HostNameAlias "${{ env.aksIngress}}" -ZoneName "${{ env.domainName }}" -ComputerName ${{ secrets.domainController }} 
          } 
          catch {
            Write-Host "Record Already Exists"
          }
          Get-DnsServerResourceRecord -ZoneName "${{ env.domainName }}" -ComputerName ${{ secrets.domainController }} | Where-Object HostName -eq "${{ env.aksIngress }}" | Format-List
          try {
            Sync-DnsServerZone -Name "${{ env.domainName }}" -ComputerName ${{ secrets.domainController }}
          } 
          catch {
            Write-Host "Skipping zone sync. Zone is currently being synced."
          }
