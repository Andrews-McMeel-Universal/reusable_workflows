name: Next.js Application CI

on:
  workflow_call:
    inputs:
      nextPublicDeployEnv:
        required: true
        type: string
        description: 'Public Next.js Deploy Environment'
      serviceApiUrl:
        required: true
        type: string
        description: 'Application Service API URL'
      baseUrl:
        required: true
        type: string
        description: 'Base URL'
      nextAuthUrl:
        required: true
        type: string
        description: 'Next.js Auth URL'
      serviceAppNameUrl:
        required: true
        type: string
        description: 'Service App Name URL'
      nextPublicBaseUrl:
        required: true
        type: string
        description: 'Next.js Public Base URL'
    secrets:
      apiSubscriptionKey:
        required: true
      nextAuthSecret:
        required: true
      PAT_ACTION_CI:
        required: true

jobs:
  # Sets up dependencies and initial cache
  install:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - uses: ./.github/actions/use-node-modules-cache

  # Required status check
  # Checks code quality and auto-formats code
  lint-and-format:
    runs-on: ubuntu-latest
    needs: [install]
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.PAT_ACTION_CI }}

      - uses: ./.github/actions/use-node-modules-cache

      - name: Lint javascript
        run: yarn lint:js

      - name: Lint scss
        run: yarn lint:styles

      # This step must be after other jobs or steps that might add or change files
      - name: Format
        run: yarn format

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_user_name: amutechtest
          commit_user_email: amu_deploy@amuniversal.com
          commit_message: Apply prettier changes

      # Status Checks
      - name: Update commit status
        uses: myrotvorets/set-commit-status-action@master
        with:
          token: ${{ secrets.PAT_ACTION_CI }}
          status: '${{ job.status }}'

  # Build the app and cache it
  build:
    runs-on: ubuntu-latest
    needs: [install, lint-and-format]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - uses: ./.github/actions/use-node-modules-cache

      - uses: ./.github/actions/use-build-cache
        with:
          build-args: ${{ env.build_args }}

  # Required status check
  # Runs CI tests
  test-in-ci:
    runs-on: ubuntu-latest
    needs: [install, lint-and-format, build]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - uses: ./.github/actions/use-node-modules-cache

      - uses: ./.github/actions/use-build-cache
        with:
          build-args: ${{ env.build_args }}

      - name: Run Jest tests
        run: yarn test:ci

      - name: Run Cypress tests
        run: ${{ env.build_args }} yarn cy:ci

      - name: Archive test screenshots
        uses: actions/upload-artifact@v1
        with:
          name: screenshots
          path: cypress/screenshots
        if: ${{ failure() }}

      # Status Checks
      - name: Update commit status
        uses: myrotvorets/set-commit-status-action@master
        with:
          token: ${{ secrets.PAT_ACTION_CI }}
          status: '${{ job.status }}'

  # Verifies links
  check-links:
    runs-on: ubuntu-latest
    needs: [install, lint-and-format, build]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - uses: ./.github/actions/use-node-modules-cache

      - uses: ./.github/actions/use-build-cache
        with:
          build-args: API_SUBSCRIPTION_KEY=${{ secrets.apiSubscriptionKey }} NEXTAUTH_URL=http://localhost:3000 NEXTAUTH_SECRET=${{ secrets.nextAuthSecret }} BASE_URL=http://localhost:3000 NEXT_PUBLIC_BASE_URL=http://localhost:3000 NEXT_PUBLIC_DEPLOY_ENV=${{ inputs.nextPublicDeployEnv }}

      - name: Run Broken Link Checker
        id: link-checker-report
        continue-on-error: true
        run: ${{ env.build_args }} yarn test:links

      - name: Link Checker Results
        if: ${{ failure() }}
        run: echo "::warning ${{steps.link-checker-report.outputs.result}}"

  # Checks gzipped page sizes
  check-size:
    runs-on: ubuntu-latest
    env:
      # Used to build the target branch for size comparison
      API_SUBSCRIPTION_KEY: ${{ secrets.apiSubscriptionKey }}
      SERVICE_API_URL: ${{ inputs.serviceApiUrl }}
    needs: [install, lint-and-format, build]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - uses: ./.github/actions/use-node-modules-cache

      - uses: ./.github/actions/use-build-cache
        with:
          build-args: ${{ env.build_args }}

      - uses: andresz1/size-limit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_step: build
