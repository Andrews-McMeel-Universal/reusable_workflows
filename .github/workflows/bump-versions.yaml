name: Bump App Version

on:
  workflow_call:
    inputs:
      releaseType:
        required: false
        type: string
        description: Type of release
      version:
        required: false
        type: string
        description: The version to bump to. If not provided, the next version will be calculated based on the latest release
    secrets:
      PAT_ACTION_CI:
        required: false

jobs:
  bump-version:
    name: Bump Version - ${{ inputs.version || inputs.releaseType }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get latest release
        if: ${{ ! inputs.version }}
        id: latestrelease
        continue-on-error: true
        uses: gregziegan/fetch-latest-release@v2.0.0

      - name: Check if environment charts exist
        id: environment-charts
        shell: pwsh
        run: |
          if (Test-Path -Path (Join-Path $basePath "./deployments/production-charts")) {
              echo "environmentCharts=true"
              echo "environmentCharts=true" >> $env:GITHUB_ENV
          }
          else {
              echo "environmentCharts=false"
              echo "environmentCharts=false" >> $env:GITHUB_ENV
          }

      - name: Get Chart.yaml appVersion
        if: ${{ env.environmentCharts == 'false' && ! inputs.version }}
        id: chartyaml
        uses: rmeneely/get-yaml-value@v1
        with:
          infile: deployments/charts/Chart.yaml
          varlist: appVersion

      - name: Get Environment Chart.yaml appVersion
        if: ${{ env.environmentCharts == 'true' && ! inputs.version }}
        id: environmentchartyaml
        uses: rmeneely/get-yaml-value@v1
        with:
          infile: deployments/production-charts/Chart.yaml
          varlist: appVersion

      - name: Check if package.json exists
        id: packagejsonfile
        uses: andstor/file-existence-action@v3
        with:
          files: "package.json"

      - name: Get package.json version
        if: ${{ steps.packagejsonfile.outputs.files_exists == 'true' && ! inputs.version }}
        id: packagejson
        uses: notiz-dev/github-action-json-property@v0.2.0
        with:
          path: "package.json"
          prop_path: "version"

      - name: Gets next semantic release
        if: ${{ ! inputs.version }}
        shell: pwsh
        run: |
          [Version]$a = "${{ steps.packagejson.outputs.prop || '0.0.0' }}"
          [Version]$b = "${{ steps.environmentchartyaml.outputs.values || steps.chartyaml.outputs.values || '0.0.0' }}"
          [Version]$c = "${{ steps.latestrelease.outputs.tag_name || '0.0.0' }}"

          $versions = [array]($a,$b,$c)
          $v = [version]($versions | Sort-Object -Descending | Select-Object -First 1)

          if ( "${{ inputs.releaseType }}" -match "major") {
            $release = [version]::New($v.Major+1,0,0)
          }
          elseif ( "${{ inputs.releaseType }}" -match "minor" ) {
            $release = [version]::New($v.Major,$v.Minor+1,0)
          }
          elseif ( "${{ inputs.releaseType }}" -match "patch" ) {
            $release = [version]::New($v.Major,$v.Minor,$v.Build+1)
          }

          echo "release=$release" >> $env:GITHUB_ENV
          echo "Bumping version to $release"

      - name: Update version in package.json
        if: steps.packagejsonfile.outputs.files_exists == 'true'
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: '"version": .*'
          replace: '"version": "${{ inputs.version || env.release }}",'
          regex: true
          include: "**package.json"

      - name: Update version in Chart.yaml
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "appVersion: .*"
          replace: "appVersion: ${{ inputs.version || env.release }}"
          regex: true
          include: "**Chart.yaml"

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "⬆️ Version bump: ${{ inputs.version || env.release }}"
          branch: maintenance/bump-version/${{ inputs.version || env.release }}
          committer: AMU Automations <amu_deploy@amuniversal.com>
          delete-branch: true
          title: "⬆️ Version bump: ${{ inputs.version || env.release }}"
          body: |
            Updating version to ${{ inputs.version || env.release }} in:
            - `**/Charts.yaml`
            - `**/package.json`
          labels: |
            ${{ inputs.releaseType }}

      - name: Auto Approve Version Update PR
        uses: hmarr/auto-approve-action@v4.0.0
        with:
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          github-token: ${{ secrets.PAT_ACTION_CI }}
