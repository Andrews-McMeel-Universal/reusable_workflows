name: Next.js Application CI

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      YARN_INSTALL:
        required: false
        type: string
        default: ${{ vars.APPLICATION_CI_YARN_INSTALL || 'false' }}
      RUN_PLAYWRIGHT_TESTS:
        required: false
        type: string
        default: ${{ vars.APPLICATION_CI_RUN_PLAYWRIGHT_TESTS || 'true' }}
      LINT_SCSS:
        required: false
        type: string
        default: ${{ vars.APPLICATION_CI_LINT_SCSS || 'true' }}
      LINT_JS:
        required: false
        type: string
        default: ${{ vars.APPLICATION_CI_LINT_JS || 'true' }}
      CHECK_SIZE_LIMIT:
        required: false
        type: string
        default: ${{ vars.APPLICATION_CI_CHECK_SIZE_LIMIT || 'true' }}
      RUN_JEST_TESTS:
        required: false
        type: string
        default: ${{ vars.APPLICATION_CI_RUN_JEST_TESTS || 'true' }}
      GITHUB_RUNNER:
        required: false
        type: string
        description: "The type of runner to use"
        default: ${{ vars.CUSTOM_GITHUB_RUNNER || 'azure' }}
      COREPACK_INSTALL:
        required: false
        type: string
        default: ${{ vars.APPLICATION_CI_COREPACK_INSTALL || 'true' }}
    secrets:
      AZURE_CREDENTIALS:
        required: true
      PAT_ACTION_CI:
        required: true

jobs:
  build:
    name: Build App
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ${{ inputs.GITHUB_RUNNER }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_ACTION_CI }}
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        shell: bash
        run: |
          IFS=$'\n\t'

          # Determine the range of commits to analyze
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            BASE=${{ github.event.pull_request.base.sha }}
            HEAD=${{ github.event.pull_request.head.sha }}
            CHANGED_FILES=$(git diff --name-only $BASE..$HEAD)
          else
            # For pushes, GitHub provides before/after
            BASE="${{ github.event.before }}"
            HEAD="${{ github.sha }}"
            # Fallback if 'before' is empty (e.g., first push)
            if [[ -z "$BASE" ]]; then
              BASE="$(git rev-list -n 2 "$HEAD" | tail -n 1 || true)"
            fi
          fi

          echo "Changed files: $CHANGED_FILES"

          # Initialize flags
          RUN_JEST=false
          RUN_PLAYWRIGHT=false

          while IFS= read -r -d '' FILE; do
            echo " - $FILE"

            # Jest Files
            case "$FILE" in
              src/*|*.js|*.jsx|*.ts|*.tsx|**/jest.config.*|jest.config.*|**/jest.*|**/__tests__/*|**/*.test.*)
                RUN_JEST=true
                ;;
            esac

            # Playwright Files
            case "$FILE" in
              src/*|playwright/*|**/*.spec.ts|**/*.spec.tsx|playwright.config.*|**/playwright.*)
                RUN_PLAYWRIGHT=true
                ;;
            esac

            # Content-based detection
            if [[ -f "$FILE" ]] && LC_ALL=C grep -Iq . -- "$FILE"; then
              if LC_ALL=C grep -Eiq -- '(^|[^A-Za-z])jest([^A-Za-z]|$)|@jest/|describe\(|it\(|test\(' "$FILE"; then
                RUN_JEST=true
              fi
              if LC_ALL=C grep -Eiq -- '(^|[^A-Za-z])playwright([^A-Za-z]|$)|@playwright/test' "$FILE"; then
                RUN_PLAYWRIGHT=true
              fi
            fi
          done < <(git diff --name-only -z "$BASE" "$HEAD")

          if [[ "$RUN_JEST" == false ]]; then
            if git diff -U0 "$BASE" "$HEAD" -- . | LC_ALL=C grep -Eiq '^\+.*(jest|@jest/|describe\(|it\(|test\()'; then
              RUN_JEST=true
            fi
          fi
          if [[ "$RUN_PLAYWRIGHT" == false ]]; then
            if git diff -U0 "$BASE" "$HEAD" -- . | LC_ALL=C grep -Eiq '^\+.*(playwright|@playwright/test)'; then
              RUN_PLAYWRIGHT=true
            fi
          fi

          echo "run-jest=$RUN_JEST" >> "$GITHUB_OUTPUT"
          echo "run-jest=$RUN_JEST"
          echo "run-playwright=$RUN_PLAYWRIGHT" >> "$GITHUB_OUTPUT"
          echo "run-playwright=$RUN_PLAYWRIGHT"

      - name: Use cache-next-install action
        if: ${{ inputs.YARN_INSTALL == 'false' }}
        uses: Andrews-McMeel-Universal/cache-next-install@v1

      - name: Use cache-yarn-install action
        if: ${{ inputs.YARN_INSTALL == 'true' }}
        uses: Andrews-McMeel-Universal/cache-yarn-install@v1
        with:
          enable-corepack: ${{ inputs.COREPACK_INSTALL }}

      - name: Lint javascript
        if: ${{ inputs.LINT_JS == 'true' }}
        run: yarn lint:js

      - name: Lint scss
        if: ${{ inputs.LINT_SCSS == 'true' }}
        run: yarn lint:styles

      - name: Push Linting Fixes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_user_name: amutechtest
          commit_user_email: amu_deploy@amuniversal.com
          commit_message: "[Formatter] Apply prettier changes"

      - name: Use .env cache action
        uses: Andrews-McMeel-Universal/get-envs@v1
        with:
          azurecredentials: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ inputs.environment }}

      - name: Use cache-next-build action
        uses: Andrews-McMeel-Universal/cache-next-build@v1

    outputs:
      run-jest: ${{ steps.changed-files.outputs.run-jest }}
      run-playwright: ${{ steps.changed-files.outputs.run-playwright }}

  unit-tests:
    name: Unit Tests
    if: ${{ inputs.RUN_JEST_TESTS == 'true' && needs.build.outputs.run-jest == 'true' }}
    needs: [build]
    runs-on: ${{ inputs.GITHUB_RUNNER }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use cache-next-install action
        if: ${{ inputs.YARN_INSTALL == 'false' }}
        uses: Andrews-McMeel-Universal/cache-next-install@v1

      - name: Use cache-yarn-install action
        if: ${{ inputs.YARN_INSTALL == 'true' }}
        uses: Andrews-McMeel-Universal/cache-yarn-install@v1
        with:
          enable-corepack: ${{ inputs.COREPACK_INSTALL }}

      - name: Use .env cache action
        uses: Andrews-McMeel-Universal/get-envs@v1
        with:
          azurecredentials: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ inputs.environment }}

      - name: Use cache-next-build action
        uses: Andrews-McMeel-Universal/cache-next-build@v1

      - name: Run Jest tests
        run: yarn test:unit:ci

  playwright-tests:
    name: Playwright Tests
    if: ${{ inputs.RUN_PLAYWRIGHT_TESTS == 'true' && needs.build.outputs.run-playwright == 'true' }}
    needs: [build]
    runs-on: ${{ inputs.GITHUB_RUNNER }}
    timeout-minutes: 25
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use cache-next-install action
        if: ${{ inputs.YARN_INSTALL == 'false' }}
        uses: Andrews-McMeel-Universal/cache-next-install@v1

      - name: Use cache-yarn-install action
        if: ${{ inputs.YARN_INSTALL == 'true' }}
        uses: Andrews-McMeel-Universal/cache-yarn-install@v1
        with:
          enable-corepack: ${{ inputs.COREPACK_INSTALL }}

      - name: Install Playwright Browsers
        run: yarn playwright install --with-deps

      - name: Use .env cache action
        uses: Andrews-McMeel-Universal/get-envs@v1
        with:
          azurecredentials: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ inputs.environment }}

      - name: Use cache-next-build action
        uses: Andrews-McMeel-Universal/cache-next-build@v1

      - name: Run Playwright tests
        run: yarn test:integration:ci

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

