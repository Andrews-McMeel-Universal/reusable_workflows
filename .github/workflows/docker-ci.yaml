name: Docker Application CI

on:
  workflow_call:
    inputs:
      NODE_ENV:
        required: false
        description: NODE_ENV environment to run in
        type: string
        default: development

jobs:
  build:
    name: Build app
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Build
        uses: docker/build-push-action@v4
        with:
          tags: docker-ci:latest
          push: false
          load: true

      - name: Get Docker variables from image
        run: |
          dockerContainerPort=$(docker image inspect docker-ci:latest -f "{{json .Config.ExposedPorts }}" | tr -d '{}":/tcp')
          dockerCmd=$(docker image inspect docker-ci:latest -f "{{json .Config.Cmd }}" | tr -d '][' | tr "," " ")

          echo "dockerContainerPort=$dockerContainerPort" >> $GITHUB_ENV
          echo "dockerCmd=$dockerCmd" >> $GITHUB_ENV

      - name: Run tests in Docker Container
        uses: addnab/docker-run-action@v3
        with:
          image: docker-ci:latest
          run: |
            ${{ env.dockerCmd }} &
            sleep 15
            RESULT=$?
            if [ $RESULT -eq 0 ]; then
              wget -O - -q "http://localhost:${{ env.dockerContainerPort }}" ||
              curl "http://localhost:${{ env.dockerContainerPort }}"
            else
              exit 1
            fi
